name: build-macos-installer
on:
  push:
    tags:
      - "v*.*.*"
jobs:
  setup-macos-build-environment:
    runs-on: macos-10.15
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Select XCode version
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '11.2.1'
      - run: mkdir $RUNNER_WORKSPACE/dev/
      # Install Qt 6.2.4
      # NOTE: jurplel/install-qt-action@v2.14.0 hasn't supported Qt6.2.4
      - name: Install Qt 6.2.4
        run: |
          brew install p7zip
          python3 -m pip install setuptools wheel
          python3 -m pip install py7zr==0.16.1
          python3 -m pip install aqtinstall==2.1.0
          python3 -m aqt install-qt  mac desktop 6.2.4 -m qtserialport qtwebsockets debug_info -O $RUNNER_WORKSPACE/Qt
      # Build and Install Potrace library
      #- name: Restore Potrace cache
      #  uses: actions/cache@v3
      #  id: cache-potrace
      #  with:
      #    path: |
      #      /usr/local/lib/libpotrace.0.dylib
      #      /usr/local/lib/libpotrace.a
      #      /usr/local/lib/libpotrace.dylib
      #      /usr/local/lib/libpotrace.la
      #    key: potrace

      - name: Install Potrace
        #if: steps.cache-potrace.outputs.cache-hit != 'true'
        run: |
            cd $RUNNER_WORKSPACE/dev/
            curl http://potrace.sourceforge.net/download/1.16/potrace-1.16.tar.gz -o potrace-1.16.tar.gz
            tar -xvf potrace-1.16.tar.gz
            cd potrace-1.16
            ./configure --with-libpotrace
            make install

      - name: Install Opencv dependencies
      # NOTE: brew installed opencv has some portability problem with brew installed openblas and gcc-11
        run: | 
          brew install pkg-config
          brew install ceres-solver
          brew install eigen
          brew install ffmpeg@4
          brew install glog
          brew install harfbuzz
          brew install numpy
          brew install protobuf
          brew install tbb
          brew install vtk
          # NOTE: boost is installed as dependencies of vtk

      # Build and Install OpenBLAS library
      #- name: Restore OpenBLAS cache
      #  uses: actions/cache@v3
      #  id: cache-openblas
      #  with:
      #    path: |
      #      /opt/OpenBLAS/include
      #      /opt/OpenBLAS/lib
      #    key: openblas

      - name: Install OpenBLAS (dependencies for OpenCV)
        #if: steps.cache-openblas.outputs.cache-hit != 'true'
        run: |
          cd $RUNNER_WORKSPACE/dev/
          ln -s /usr/local/Cellar/gcc/11.3.0/bin/gfortran /usr/local/bin/gfortran
          git clone https://github.com/xianyi/OpenBLAS.git $RUNNER_WORKSPACE/dev/openBLAS
          cd OpenBLAS
          make -j4
          sudo make install

      # Build and Install OpenCV library
      #- name: Restore OpenCV cache
      #  uses: actions/cache@v3
      #  id: cache-opencv
      #  with:
      #    path: |
      #      /usr/local/include/opencv4/
      #      /usr/local/lib/libopencv_**.dylib
      #      /usr/local/bin/opencv_**
      #      /usr/local/share/licenses/opencv4
      #      /usr/local/share/opencv4
      #      /usr/local/lib/cmake/opencv4
      #      /usr/local/bin/setup_vars_opencv4.sh
      #    key: opencv
      - name: Install OpenCV
        #if: steps.cache-opencv.outputs.cache-hit != 'true'
        run: |
          cd $RUNNER_WORKSPACE/dev/
          mkdir opencv
          cd opencv
          git clone https://github.com/opencv/opencv.git
          git clone https://github.com/opencv/opencv_contrib.git
          mkdir build_opencv
          cd build_opencv
          opencv_cmake_args="-DCMAKE_OSX_DEPLOYMENT_TARGET= -DBUILD_JASPER=OFF -DBUILD_JPEG=OFF -DBUILD_OPENEXR=OFF -DBUILD_PERF_TESTS=OFF -DBUILD_PNG=OFF -DBUILD_PROTOBUF=OFF -DBUILD_TESTS=OFF -DBUILD_TIFF=OFF -DBUILD_WEBP=OFF -DBUILD_ZLIB=OFF -DBUILD_opencv_hdf=OFF -DBUILD_opencv_java=OFF -DBUILD_opencv_text=ON -DOPENCV_ENABLE_NONFREE=ON -DOPENCV_GENERATE_PKGCONFIG=ON -DPROTOBUF_UPDATE_FILES=ON -DWITH_1394=OFF -DWITH_CUDA=OFF -DWITH_EIGEN=ON -DWITH_FFMPEG=ON -DWITH_GPHOTO2=OFF -DWITH_GSTREAMER=OFF -DWITH_JASPER=OFF -DWITH_OPENEXR=ON -DWITH_OPENGL=OFF -DWITH_QT=OFF -DWITH_TBB=ON -DWITH_VTK=ON -DBUILD_opencv_python2=OFF -DBUILD_opencv_python3=ON -DPYTHON3_EXECUTABLE=/usr/local/opt/python@3.9/bin/python3 -DENABLE_AVX=OFF -DENABLE_AVX2=OFF -DENABLE_SSE41=OFF -DENABLE_SSE42=OFF"
          echo ${opencv_cmake_args}
          cmake ${opencv_cmake_args} -DOPENCV_EXTRA_MODULES_PATH=$RUNNER_WORKSPACE/dev/opencv/opencv_contrib/modules $RUNNER_WORKSPACE/dev/opencv/opencv
          make
          make install

      - name: Install libxml2
        run: brew install libxml2
      
      - name: QMake project
        run: |
          mkdir build
          cd build
          $RUNNER_WORKSPACE/Qt/6.2.4/macos/bin/qmake6 ${{ github.workspace }}/swiftray.pro -spec macx-clang CONFIG+=qtquickcompiler
      - name: Compile (Build) project
        run: |
          cd build
          make qmake_all
          make -j10
      - run: |
          brew install tree
          tree build/
      - name: Package built executable into dmg
        run: |
          cd build
          $RUNNER_WORKSPACE/Qt/6.2.4/macos/bin/macdeployqt Swiftray.app -qmldir=${{ github.workspace }}/src/windows/qml -dmg
          tree .
      
      - name: Create Github Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: build/Swiftray.dmg
